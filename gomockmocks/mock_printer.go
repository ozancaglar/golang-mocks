// Code generated by MockGen. DO NOT EDIT.
// Source: printergomocks.go

// Package mocks is a generated GoMock package.
package gomockmocks

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockPrinterI is a mock of PrinterI interface.
type MockPrinterI struct {
	ctrl     *gomock.Controller
	recorder *MockPrinterIMockRecorder
}

// MockPrinterIMockRecorder is the mock recorder for MockPrinterI.
type MockPrinterIMockRecorder struct {
	mock *MockPrinterI
}

// NewMockPrinterI creates a new mock instance.
func NewMockPrinterI(ctrl *gomock.Controller) *MockPrinterI {
	mock := &MockPrinterI{ctrl: ctrl}
	mock.recorder = &MockPrinterIMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockPrinterI) EXPECT() *MockPrinterIMockRecorder {
	return m.recorder
}

// Print mocks base method.
func (m *MockPrinterI) Print() error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Print")
	ret0, _ := ret[0].(error)
	return ret0
}

// Print indicates an expected call of Print.
func (mr *MockPrinterIMockRecorder) Print() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Print", reflect.TypeOf((*MockPrinterI)(nil).Print))
}
